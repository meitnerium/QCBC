#! /cvmfs/soft.computecanada.ca/nix/var/nix/profiles/16.09/bin/bash

NPROC=32
MEM=100GB
while [ $1 ] ; do  
  if [ $1 == "-nproc" ] ; then
	NPROC=$2
	shift
	shift
  elif [ $1 == "-mem" ] ; then
	  MEM=$2
	shift 
	shift
  fi
done

function createsh () {
echo "#! /bin/bash
#SBATCH -t 3-00:00
#SBATCH -c 32
#SBATCH --mem=0
#SBATCH --account=def-fdion
#SBATCH -J QCDB_onecalc
# mail alert at start, end and abortion of execution
#SBATCH --mail-type=ALL
# send mail to this address
#SBATCH --mail-user=meitnerium109@gmail.com" > submit.bash

echo "module load gaussian/g16.b01" >> submit.bash
echo "time g16 opt.gjf" >> submit.bash
echo "time g16 freq.gjf" >> submit.bash


}



METHOD="HF MP2 MP3 B3LYP WB97XD"
BASIS="STO-3G 3-21G 6-31G 6-311++G(3df,3pd) aug-cc-pvdz aug-cc-pvtz aug-cc-pvqz"

for i in $METHOD ; do
   echo "METHOD = $METHOD"
   mkdir -p $i
   cd $i
   if [ $i == "MP3" ] ; then
           FREQ="freq"
   else
           FREQ="freq=(raman)"
   fi
   nbas=1
   for j in $BASIS ; do
      REPBASIS=$(echo $j | sed 's/+/plus/g' | sed 's/*/star/g' | sed 's/(/_/g' | sed 's/)/_/g' | sed 's/,/virg/g')
      mkdir -p $REPBASIS
      cd $REPBASIS
      echo "$i / $j : $(pwd)"
      test="$(tail -n 1 opt.log | grep -c 'Normal termination')"
      if [ "${test}" == "0"  ]; then
        input="opt.gjf"
	echo "%nprocshared=$NPROC" > $input
        echo "%mem=$MEM" >> $input
        echo "%chk=chk.chk" >> $input
        if [ -e ../../chk.chk ] ; then
	  echo "%oldchk=../../chk.chk" >> $input
          echo "#$i/$j opt=(VeryTight,maxcycle=500) geom=checkpoint" >> $input
          echo "" >> $input
          echo "$i $j" >> $input
          echo "" >> $input
          echo "0 1" >> $input
          echo "" >> $input
        else
          echo "#$i/$j opt=(VeryTight)" >> $input
          echo "" >> $input
          echo "$i $j" >> $input
          echo "" >> $input
          echo "0 1" >> $input
          cat ../../../XYZ.txt >> $input
          echo "" >> $input
        fi
	if [ "$j" == "6-311++G(3df,3pd)" ]  || [ "$j" == "aug-cc-pvdz" ] || [ "$j" == "aug-cc-pvtz" ] || [ "$j" == "aug-cc-pvqz" ] || [ $i == "MP3" ] ; then
	  echo "cd $(pwd)" >> /scratch/dion/QCDB/waitlist.txt
	  echo "g16 $input" >> /scratch/dion/QCDB/waitlist.txt
          input="freq.gjf"
          echo "%nprocshared=$NPROC" > $input
          echo "%mem=$MEM" >> $input
          echo "%chk=chk.chk" >> $input
          echo "#$i/$j geom=checkpoint $FREQ" >> $input
          echo "" >> $input
          echo "$i $j" >> $input
          echo "" >> $input
          echo "0 1" >> $input
          echo "" >> $input
          echo "g16 $input" >> /scratch/dion/QCDB/waitlist.txt
	else
          echo "g16 $(pwd)/$input" > /scratch/dion/QCDB/current.txt
          time g16 $input 
        fi
      fi


      input="freq.gjf"
      echo "%nprocshared=$NPROC" > $input
      echo "%mem=$MEM" >> $input
      echo "%chk=chk.chk" >> $input
      echo "#$i/$j geom=checkpoint $FREQ" >> $input
      echo "" >> $input
      echo "$i $j" >> $input
      echo "" >> $input
      echo "0 1" >> $input
      echo "" >> $input


      test1="$(tail -n 1 opt.log | grep -c 'Normal termination')" 
      test2="$(tail -n 1 freq.log | grep -c 'Normal termination')"
      if [ ${test1} -gt 0  ] && [ ${test2} -lt "1" ] ; then
          cp chk.chk ../../chk.chk
          formchk chk.chk
	  echo "g16 $(pwd)/$input" > /scratch/dion/QCDB/current.txt
	  time g16 $input
      fi
      createsh
      let nbas=$nbas+1
      cd ..
   done
   cd ..
done

